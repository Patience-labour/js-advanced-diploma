/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={186:(e,t,r)=>{e.exports=r.p+"images/2429af6d3a5796e3c34b.png"},227:(e,t,r)=>{e.exports=r.p+"images/f5c75398bcb5931f9f3c.png"},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},756:(e,t,r)=>{e.exports=r.p+"images/bf0ed0dca1d1e6091d42.png"},1016:(e,t,r)=>{r.d(t,{A:()=>He});var n=r(1354),o=r.n(n),a=r(6314),i=r.n(a),c=r(4417),l=r.n(c),s=new URL(r(7935),r.b),u=new URL(r(1409),r.b),f=new URL(r(3232),r.b),p=new URL(r(1265),r.b),h=new URL(r(6267),r.b),m=new URL(r(186),r.b),d=new URL(r(9745),r.b),y=new URL(r(8490),r.b),b=new URL(r(2573),r.b),g=new URL(r(4496),r.b),v=new URL(r(8956),r.b),A=new URL(r(9221),r.b),C=new URL(r(6092),r.b),E=new URL(r(4184),r.b),w=new URL(r(5513),r.b),k=new URL(r(3062),r.b),S=new URL(r(4875),r.b),P=new URL(r(5134),r.b),x=new URL(r(7335),r.b),B=new URL(r(6153),r.b),O=new URL(r(9e3),r.b),L=new URL(r(9593),r.b),j=new URL(r(5523),r.b),T=new URL(r(7986),r.b),D=new URL(r(4041),r.b),G=new URL(r(7538),r.b),R=new URL(r(1605),r.b),_=new URL(r(6318),r.b),U=new URL(r(3933),r.b),z=new URL(r(6291),r.b),M=new URL(r(9702),r.b),$=new URL(r(1906),r.b),I=new URL(r(4347),r.b),N=new URL(r(1216),r.b),q=new URL(r(4437),r.b),H=new URL(r(3160),r.b),W=new URL(r(8341),r.b),F=new URL(r(2076),r.b),Y=new URL(r(3860),r.b),X=new URL(r(6943),r.b),V=new URL(r(6168),r.b),J=new URL(r(227),r.b),Q=new URL(r(756),r.b),Z=new URL(r(9334),r.b),K=i()(o()),ee=l()(s),te=l()(u),re=l()(f),ne=l()(p),oe=l()(h),ae=l()(m),ie=l()(d),ce=l()(y),le=l()(b),se=l()(g),ue=l()(v),fe=l()(A),pe=l()(C),he=l()(E),me=l()(w),de=l()(k),ye=l()(S),be=l()(P),ge=l()(x),ve=l()(B),Ae=l()(O),Ce=l()(L),Ee=l()(j),we=l()(T),ke=l()(D),Se=l()(G),Pe=l()(R),xe=l()(_),Be=l()(U),Oe=l()(z),Le=l()(M),je=l()($),Te=l()(I),De=l()(N),Ge=l()(q),Re=l()(H),_e=l()(W),Ue=l()(F),ze=l()(Y),Me=l()(X),$e=l()(V),Ie=l()(J),Ne=l()(Q),qe=l()(Z);K.push([e.id,`:root {\n  --cell-size: 64px;\n}\n\nhtml, body {\n  height: 100%;\n  margin: 0;\n}\n\nbody {\n  background: #000;\n  font-size: 16px;\n}\n\n.btn {\n  display: inline-block;\n  font-weight: 400;\n  color: #212529;\n  background-color: #f8f9fa;\n  text-align: center;\n  vertical-align: middle;\n  padding: .375rem .75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: .25rem;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n  border: none;\n}\n\n.controls {\n  text-align: center;\n  margin: 50px 0;\n}\n\n.board-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-column-gap: 2px;\n  grid-row-gap: 2px;\n}\n\n.cell {\n  position: relative;\n}\n\n.cell.selected::before {\n  content: '';\n  display: block;\n  border: 4px;\n  border-radius: 32px;\n  box-sizing: border-box;\n  width: var(--cell-size);\n  height: var(--cell-size);\n  opacity: 0.9;\n  position: absolute;\n}\n\n.cell.selected-yellow::before {\n  border-color: #ff0;\n  border-style: solid;\n}\n\n.cell.selected-green::before {\n  border-color: #0f0;\n  border-style: dashed;\n}\n\n.cell.selected-red::before {\n  border-color: #f00;\n  border-style: dashed;\n}\n\n.board.prairie {\n  --map-tile-top-left-url: url(${ee});\n  --map-tile-top-url: url(${te});\n  --map-tile-top-right-url: url(${re});\n  --map-tile-bottom-left-url: url(${ne});\n  --map-tile-bottom-url: url(${oe});\n  --map-tile-bottom-right-url: url(${ae});\n  --map-tile-left-url: url(${ie});\n  --map-tile-right-url: url(${ce});\n  --map-tile-center-url: url(${le});\n}\n\n.board.desert {\n  --map-tile-top-left-url: url(${se});\n  --map-tile-top-url: url(${ue});\n  --map-tile-top-right-url: url(${fe});\n  --map-tile-bottom-left-url: url(${pe});\n  --map-tile-bottom-url: url(${he});\n  --map-tile-bottom-right-url: url(${me});\n  --map-tile-left-url: url(${de});\n  --map-tile-right-url: url(${ye});\n  --map-tile-center-url: url(${be});\n}\n\n.board.arctic {\n  --map-tile-top-left-url: url(${ge});\n  --map-tile-top-url: url(${ve});\n  --map-tile-top-right-url: url(${Ae});\n  --map-tile-bottom-left-url: url(${Ce});\n  --map-tile-bottom-url: url(${Ee});\n  --map-tile-bottom-right-url: url(${we});\n  --map-tile-left-url: url(${ke});\n  --map-tile-right-url: url(${Se});\n  --map-tile-center-url: url(${Pe});\n}\n\n.board.mountain {\n  --map-tile-top-left-url: url(${xe});\n  --map-tile-top-url: url(${Be});\n  --map-tile-top-right-url: url(${Oe});\n  --map-tile-bottom-left-url: url(${Le});\n  --map-tile-bottom-url: url(${je});\n  --map-tile-bottom-right-url: url(${Te});\n  --map-tile-left-url: url(${De});\n  --map-tile-right-url: url(${Ge});\n  --map-tile-center-url: url(${Re});\n}\n\n.map-tile {\n  width: var(--cell-size);\n  height: var(--cell-size);\n}\n\n.map-tile-top-left {\n  background: var(--map-tile-top-left-url);\n}\n\n.map-tile-top {\n  background: var(--map-tile-top-url);\n}\n\n.map-tile-top-right {\n  background: var(--map-tile-top-right-url);\n}\n\n.map-tile-bottom-left {\n  background: var(--map-tile-bottom-left-url);\n}\n\n.map-tile-bottom {\n  background: var(--map-tile-bottom-url);\n}\n\n.map-tile-bottom-right {\n  background: var(--map-tile-bottom-right-url);\n}\n\n.map-tile-left {\n  background: var(--map-tile-left-url);\n}\n\n.map-tile-right {\n  background: var(--map-tile-right-url);\n}\n\n.map-tile-center {\n  background: var(--map-tile-center-url);\n}\n\n.character {\n  width: var(--cell-size);\n  height: var(--cell-size);\n  position: absolute;\n  z-index: 99;\n}\n\n.character.generic {\n  background: url(${_e});\n}\n\n.character.bowman {\n  background: url(${Ue});\n}\n\n.character.daemon {\n  background: url(${ze});\n}\n\n.character.magician {\n  background: url(${Me});\n}\n\n.character.swordsman {\n  background: url(${$e});\n}\n\n.character.undead {\n  background: url(${Ie});\n}\n\n.character.vampire {\n  background: url(${Ne});\n}\n\n.character.zombie {\n  background: url(${qe});\n}\n\n.health-level {\n  top: 2px;\n  left: 7px;\n  position: absolute;\n  width: 50px;\n  height: 4px;\n  background: #000;\n}\n\n.health-level-indicator {\n  height: 4px;\n}\n\n.health-level-indicator-high {\n  background: #0f0;\n}\n\n.health-level-indicator-normal {\n  background: #ff0;\n}\n\n.health-level-indicator-critical {\n  background: #f00;\n}\n\n.damage {\n  position: absolute;\n  width: var(--cell-size);\n  text-align: center;\n  z-index: 999;\n  color: #f00;\n  font-weight: bold;\n  animation: 500ms fade ease-out;\n}\n\n@keyframes fade {\n  from {\n    opacity: 0;\n    top: calc(var(--cell-size) * 0.5);\n    font-size: 1rem;\n  }\n  to {\n    opacity: 1;\n    top: -20px;\n    font-size: 1.5rem;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,cAAc;EACd,yBAAyB;EACzB,kBAAkB;EAClB,sBAAsB;EACtB,uBAAuB;EACvB,eAAe;EACf,gBAAgB;EAChB,qBAAqB;EACrB,8HAA8H;EAC9H,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,oBAAoB;EACpB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,WAAW;EACX,mBAAmB;EACnB,sBAAsB;EACtB,uBAAuB;EACvB,wBAAwB;EACxB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,gEAAoE;EACpE,2DAA0D;EAC1D,iEAAsE;EACtE,mEAA0E;EAC1E,8DAAgE;EAChE,oEAA4E;EAC5E,4DAA4D;EAC5D,6DAA8D;EAC9D,8DAAgE;AAClE;;AAEA;EACE,gEAAmE;EACnE,4DAAyD;EACzD,kEAAqE;EACrE,oEAAyE;EACzE,+DAA+D;EAC/D,qEAA2E;EAC3E,6DAA2D;EAC3D,8DAA6D;EAC7D,+DAA+D;AACjE;;AAEA;EACE,iEAAmE;EACnE,4DAAyD;EACzD,kEAAqE;EACrE,oEAAyE;EACzE,+DAA+D;EAC/D,qEAA2E;EAC3E,6DAA2D;EAC3D,8DAA6D;EAC7D,+DAA+D;AACjE;;AAEA;EACE,iEAAqE;EACrE,4DAA2D;EAC3D,kEAAuE;EACvE,oEAA2E;EAC3E,+DAAiE;EACjE,qEAA6E;EAC7E,6DAA6D;EAC7D,8DAA+D;EAC/D,+DAAiE;AACnE;;AAEA;EACE,uBAAuB;EACvB,wBAAwB;AAC1B;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,2CAA2C;AAC7C;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,uBAAuB;EACvB,wBAAwB;EACxB,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,oDAAgD;AAClD;;AAEA;EACE,oDAA+C;AACjD;;AAEA;EACE,oDAA+C;AACjD;;AAEA;EACE,oDAAiD;AACnD;;AAEA;EACE,oDAAkD;AACpD;;AAEA;EACE,oDAA+C;AACjD;;AAEA;EACE,oDAAgD;AAClD;;AAEA;EACE,oDAA+C;AACjD;;AAEA;EACE,QAAQ;EACR,SAAS;EACT,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,iBAAiB;EACjB,8BAA8B;AAChC;;AAEA;EACE;IACE,UAAU;IACV,iCAAiC;IACjC,eAAe;EACjB;EACA;IACE,UAAU;IACV,UAAU;IACV,iBAAiB;EACnB;AACF",sourcesContent:[":root {\r\n  --cell-size: 64px;\r\n}\r\n\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  background: #000;\r\n  font-size: 16px;\r\n}\r\n\r\n.btn {\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  color: #212529;\r\n  background-color: #f8f9fa;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  padding: .375rem .75rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border-radius: .25rem;\r\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n  border: none;\r\n}\r\n\r\n.controls {\r\n  text-align: center;\r\n  margin: 50px 0;\r\n}\r\n\r\n.board-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.board {\r\n  display: grid;\r\n  grid-template-columns: repeat(8, 1fr);\r\n  grid-column-gap: 2px;\r\n  grid-row-gap: 2px;\r\n}\r\n\r\n.cell {\r\n  position: relative;\r\n}\r\n\r\n.cell.selected::before {\r\n  content: '';\r\n  display: block;\r\n  border: 4px;\r\n  border-radius: 32px;\r\n  box-sizing: border-box;\r\n  width: var(--cell-size);\r\n  height: var(--cell-size);\r\n  opacity: 0.9;\r\n  position: absolute;\r\n}\r\n\r\n.cell.selected-yellow::before {\r\n  border-color: #ff0;\r\n  border-style: solid;\r\n}\r\n\r\n.cell.selected-green::before {\r\n  border-color: #0f0;\r\n  border-style: dashed;\r\n}\r\n\r\n.cell.selected-red::before {\r\n  border-color: #f00;\r\n  border-style: dashed;\r\n}\r\n\r\n.board.prairie {\r\n  --map-tile-top-left-url: url('../img/prairie/map-tile-top-left.png');\r\n  --map-tile-top-url: url('../img/prairie/map-tile-top.png');\r\n  --map-tile-top-right-url: url('../img/prairie/map-tile-top-right.png');\r\n  --map-tile-bottom-left-url: url('../img/prairie/map-tile-bottom-left.png');\r\n  --map-tile-bottom-url: url('../img/prairie/map-tile-bottom.png');\r\n  --map-tile-bottom-right-url: url('../img/prairie/map-tile-bottom-right.png');\r\n  --map-tile-left-url: url('../img/prairie/map-tile-left.png');\r\n  --map-tile-right-url: url('../img/prairie/map-tile-right.png');\r\n  --map-tile-center-url: url('../img/prairie/map-tile-center.png');\r\n}\r\n\r\n.board.desert {\r\n  --map-tile-top-left-url: url('../img/desert/map-tile-top-left.png');\r\n  --map-tile-top-url: url('../img/desert/map-tile-top.png');\r\n  --map-tile-top-right-url: url('../img/desert/map-tile-top-right.png');\r\n  --map-tile-bottom-left-url: url('../img/desert/map-tile-bottom-left.png');\r\n  --map-tile-bottom-url: url('../img/desert/map-tile-bottom.png');\r\n  --map-tile-bottom-right-url: url('../img/desert/map-tile-bottom-right.png');\r\n  --map-tile-left-url: url('../img/desert/map-tile-left.png');\r\n  --map-tile-right-url: url('../img/desert/map-tile-right.png');\r\n  --map-tile-center-url: url('../img/desert/map-tile-center.png');\r\n}\r\n\r\n.board.arctic {\r\n  --map-tile-top-left-url: url('../img/arctic/map-tile-top-left.png');\r\n  --map-tile-top-url: url('../img/arctic/map-tile-top.png');\r\n  --map-tile-top-right-url: url('../img/arctic/map-tile-top-right.png');\r\n  --map-tile-bottom-left-url: url('../img/arctic/map-tile-bottom-left.png');\r\n  --map-tile-bottom-url: url('../img/arctic/map-tile-bottom.png');\r\n  --map-tile-bottom-right-url: url('../img/arctic/map-tile-bottom-right.png');\r\n  --map-tile-left-url: url('../img/arctic/map-tile-left.png');\r\n  --map-tile-right-url: url('../img/arctic/map-tile-right.png');\r\n  --map-tile-center-url: url('../img/arctic/map-tile-center.png');\r\n}\r\n\r\n.board.mountain {\r\n  --map-tile-top-left-url: url('../img/mountain/map-tile-top-left.png');\r\n  --map-tile-top-url: url('../img/mountain/map-tile-top.png');\r\n  --map-tile-top-right-url: url('../img/mountain/map-tile-top-right.png');\r\n  --map-tile-bottom-left-url: url('../img/mountain/map-tile-bottom-left.png');\r\n  --map-tile-bottom-url: url('../img/mountain/map-tile-bottom.png');\r\n  --map-tile-bottom-right-url: url('../img/mountain/map-tile-bottom-right.png');\r\n  --map-tile-left-url: url('../img/mountain/map-tile-left.png');\r\n  --map-tile-right-url: url('../img/mountain/map-tile-right.png');\r\n  --map-tile-center-url: url('../img/mountain/map-tile-center.png');\r\n}\r\n\r\n.map-tile {\r\n  width: var(--cell-size);\r\n  height: var(--cell-size);\r\n}\r\n\r\n.map-tile-top-left {\r\n  background: var(--map-tile-top-left-url);\r\n}\r\n\r\n.map-tile-top {\r\n  background: var(--map-tile-top-url);\r\n}\r\n\r\n.map-tile-top-right {\r\n  background: var(--map-tile-top-right-url);\r\n}\r\n\r\n.map-tile-bottom-left {\r\n  background: var(--map-tile-bottom-left-url);\r\n}\r\n\r\n.map-tile-bottom {\r\n  background: var(--map-tile-bottom-url);\r\n}\r\n\r\n.map-tile-bottom-right {\r\n  background: var(--map-tile-bottom-right-url);\r\n}\r\n\r\n.map-tile-left {\r\n  background: var(--map-tile-left-url);\r\n}\r\n\r\n.map-tile-right {\r\n  background: var(--map-tile-right-url);\r\n}\r\n\r\n.map-tile-center {\r\n  background: var(--map-tile-center-url);\r\n}\r\n\r\n.character {\r\n  width: var(--cell-size);\r\n  height: var(--cell-size);\r\n  position: absolute;\r\n  z-index: 99;\r\n}\r\n\r\n.character.generic {\r\n  background: url('../img/characters/generic.png');\r\n}\r\n\r\n.character.bowman {\r\n  background: url('../img/characters/bowman.png');\r\n}\r\n\r\n.character.daemon {\r\n  background: url('../img/characters/daemon.png');\r\n}\r\n\r\n.character.magician {\r\n  background: url('../img/characters/magician.png');\r\n}\r\n\r\n.character.swordsman {\r\n  background: url('../img/characters/swordsman.png');\r\n}\r\n\r\n.character.undead {\r\n  background: url('../img/characters/undead.png');\r\n}\r\n\r\n.character.vampire {\r\n  background: url('../img/characters/vampire.png');\r\n}\r\n\r\n.character.zombie {\r\n  background: url('../img/characters/zombie.png');\r\n}\r\n\r\n.health-level {\r\n  top: 2px;\r\n  left: 7px;\r\n  position: absolute;\r\n  width: 50px;\r\n  height: 4px;\r\n  background: #000;\r\n}\r\n\r\n.health-level-indicator {\r\n  height: 4px;\r\n}\r\n\r\n.health-level-indicator-high {\r\n  background: #0f0;\r\n}\r\n\r\n.health-level-indicator-normal {\r\n  background: #ff0;\r\n}\r\n\r\n.health-level-indicator-critical {\r\n  background: #f00;\r\n}\r\n\r\n.damage {\r\n  position: absolute;\r\n  width: var(--cell-size);\r\n  text-align: center;\r\n  z-index: 999;\r\n  color: #f00;\r\n  font-weight: bold;\r\n  animation: 500ms fade ease-out;\r\n}\r\n\r\n@keyframes fade {\r\n  from {\r\n    opacity: 0;\r\n    top: calc(var(--cell-size) * 0.5);\r\n    font-size: 1rem;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    top: -20px;\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const He=K},1113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},1216:(e,t,r)=>{e.exports=r.p+"images/c75f062dddba6e98fdc6.png"},1265:(e,t,r)=>{e.exports=r.p+"images/26b5f224d8750119922d.png"},1354:e=>{e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},1409:(e,t,r)=>{e.exports=r.p+"images/946aeb948db6313f1d85.png"},1605:(e,t,r)=>{e.exports=r.p+"images/246277b8ca590816b3e8.png"},1906:(e,t,r)=>{e.exports=r.p+"images/f462d2ed6eedca1e4fd9.png"},2076:(e,t,r)=>{e.exports=r.p+"images/cec542854b228e61547a.png"},2573:(e,t,r)=>{e.exports=r.p+"images/0089a610e6611f679b50.png"},3062:(e,t,r)=>{e.exports=r.p+"images/eb1f6e4f87b977012684.png"},3160:(e,t,r)=>{e.exports=r.p+"images/6f6f7c09bde970b2e41b.png"},3232:(e,t,r)=>{e.exports=r.p+"images/0ac7f8258ec7166dc957.png"},3860:(e,t,r)=>{e.exports=r.p+"images/cf170a9fea1051b7424a.png"},3933:(e,t,r)=>{e.exports=r.p+"images/8b928c3eb136543e573a.png"},4041:(e,t,r)=>{e.exports=r.p+"images/3d9503e0a850fda86f82.png"},4184:(e,t,r)=>{e.exports=r.p+"images/f1703771380a9959d979.png"},4347:(e,t,r)=>{e.exports=r.p+"images/6bacb8e25ed9ecf726bf.png"},4417:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},4437:(e,t,r)=>{e.exports=r.p+"images/26fdc25019c24e87f11a.png"},4496:(e,t,r)=>{e.exports=r.p+"images/258d884122fabfc2f312.png"},4875:(e,t,r)=>{e.exports=r.p+"images/2c19971f327b288278bb.png"},5056:(e,t,r)=>{e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},5072:e=>{var t=[];function r(e){for(var r=-1,n=0;n<t.length;n++)if(t[n].identifier===e){r=n;break}return r}function n(e,n){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],s=n.base?l[0]+n.base:l[0],u=a[s]||0,f="".concat(s," ").concat(u);a[s]=u+1;var p=r(f),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(h);else{var m=o(h,n);n.byIndex=c,t.splice(c,0,{identifier:f,updater:m,references:1})}i.push(f)}return i}function o(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,o){var a=n(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=r(a[i]);t[c].references--}for(var l=n(e,o),s=0;s<a.length;s++){var u=r(a[s]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=l}}},5134:(e,t,r)=>{e.exports=r.p+"images/51e2a5de56bd631452fe.png"},5513:(e,t,r)=>{e.exports=r.p+"images/5cf9c17d6a1ea7106a6c.png"},5523:(e,t,r)=>{e.exports=r.p+"images/63aae58e4690953a3857.png"},6092:(e,t,r)=>{e.exports=r.p+"images/13edb269e39172ddd74f.png"},6153:(e,t,r)=>{e.exports=r.p+"images/e0aa3daf6d08c62c96d9.png"},6168:(e,t,r)=>{e.exports=r.p+"images/2007ec00c1d9f997e704.png"},6267:(e,t,r)=>{e.exports=r.p+"images/07d5e8127645225478b6.png"},6291:(e,t,r)=>{e.exports=r.p+"images/a1d2321024649b9d8f5f.png"},6314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var r="",n=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),n&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),n&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r}).join("")},t.i=function(e,r,n,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(n)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);n&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},6318:(e,t,r)=>{e.exports=r.p+"images/ef1b0ea8c4e545d9aadc.png"},6943:(e,t,r)=>{e.exports=r.p+"images/c0fa2b75539f94144dc4.png"},7335:(e,t,r)=>{e.exports=r.p+"images/eab6a2cc5e89a4dd8e3f.png"},7538:(e,t,r)=>{e.exports=r.p+"images/22e7c5ede3f747cbe27a.png"},7659:e=>{var t={};e.exports=function(e,r){var n=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},7825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},7935:(e,t,r)=>{e.exports=r.p+"images/46d63299c3420c030b4e.png"},7986:(e,t,r)=>{e.exports=r.p+"images/ac9d74f57639792774bc.png"},8341:(e,t,r)=>{e.exports=r.p+"images/0a77fc47d727eab6fd39.png"},8490:(e,t,r)=>{e.exports=r.p+"images/6a84ae91f5d985ddc9ee.png"},8956:(e,t,r)=>{e.exports=r.p+"images/dc3f97e7bbcd5ea1ded9.png"},9e3:(e,t,r)=>{e.exports=r.p+"images/d31d84c693f649766aee.png"},9221:(e,t,r)=>{e.exports=r.p+"images/2f1e1970c2c20cf3a8d5.png"},9334:(e,t,r)=>{e.exports=r.p+"images/296dfeac15e2377fc1dc.png"},9593:(e,t,r)=>{e.exports=r.p+"images/b27323cf850ed820855c.png"},9702:(e,t,r)=>{e.exports=r.p+"images/1d70f1dab2dd418c3612.png"},9745:(e,t,r)=>{e.exports=r.p+"images/546abb060a0837550fd1.png"}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={id:n,exports:{}};return e[n](a,a.exports,r),a.exports}r.m=e,r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r.b="undefined"!=typeof document&&document.baseURI||self.location.href,r.nc=void 0;var n=r(5072),o=r.n(n),a=r(7825),i=r.n(a),c=r(7659),l=r.n(c),s=r(5056),u=r.n(s),f=r(540),p=r.n(f),h=r(1113),m=r.n(h),d=r(1016),y={};y.styleTagTransform=m(),y.setAttributes=u(),y.insert=l().bind(null,"head"),y.domAPI=i(),y.insertStyleElement=p(),o()(d.A,y),d.A&&d.A.locals&&d.A.locals;var b={swordsman:4,bowman:2,magician:1,vampire:2,undead:4,daemon:1},g={swordsman:1,bowman:2,magician:4,vampire:2,undead:1,daemon:4};function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function A(e,t){var r=Math.floor(e/t),n=e%t;return 0===r?0===n?"top-left":n===t-1?"top-right":"top":r===t-1?0===n?"bottom-left":n===t-1?"bottom-right":"bottom":0===n?"left":n===t-1?"right":"center"}function C(e){return e<15?"critical":e<50?"normal":"high"}function E(e,t,r){for(var n=[],o=Math.floor(e/r),a=e%r,i=Math.max(0,o-t);i<=Math.min(r-1,o+t);i++)for(var c=Math.max(0,a-t);c<=Math.min(r-1,a+t);c++){var l=i*r+c;l!==e&&k(e,l,r)<=t&&n.push(l)}return n}function w(e,t,r){for(var n=[],o=Math.floor(e/r),a=e%r,i=Math.max(0,o-t);i<=Math.min(r-1,o+t);i++)for(var c=Math.max(0,a-t);c<=Math.min(r-1,a+t);c++){var l=i*r+c;l!==e&&k(e,l,r)<=t&&n.push(l)}return n}function k(e,t,r){var n=Math.floor(e/r),o=e%r,a=Math.floor(t/r),i=t%r;return Math.max(Math.abs(n-a),Math.abs(o-i))}function S(e){return b[e]||0}function P(e){return g[e]||0}function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function B(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=O(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return i=e.done,e},e:function(e){c=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(c)throw a}}}}function O(e,t){if(e){if("string"==typeof e)return L(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?L(e,t):void 0}}function L(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,T(n.key),n)}}function T(e){var t=function(e){if("object"!=x(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==x(t)?t:t+""}var D=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]},t=[{key:"bindToDOM",value:function(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}},{key:"drawUi",value:function(e){var t=this;this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",function(e){return t.onNewGameClick(e)}),this.saveGameEl.addEventListener("click",function(e){return t.onSaveGameClick(e)}),this.loadGameEl.addEventListener("click",function(e){return t.onLoadGameClick(e)}),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(var r=0;r<Math.pow(this.boardSize,2);r+=1){var n=document.createElement("div");n.classList.add("cell","map-tile","map-tile-".concat(A(r,this.boardSize))),n.addEventListener("mouseenter",function(e){return t.onCellEnter(e)}),n.addEventListener("mouseleave",function(e){return t.onCellLeave(e)}),n.addEventListener("click",function(e){return t.onCellClick(e)}),this.boardEl.appendChild(n)}this.cells=Array.from(this.boardEl.children)}},{key:"redrawPositions",value:function(e){var t,r=B(this.cells);try{for(r.s();!(t=r.n()).done;)t.value.innerHTML=""}catch(e){r.e(e)}finally{r.f()}var n,o=B(e);try{for(o.s();!(n=o.n()).done;){var a=n.value,i=this.boardEl.children[a.position],c=document.createElement("div");c.classList.add("character",a.character.type);var l=document.createElement("div");l.classList.add("health-level");var s=document.createElement("div");s.classList.add("health-level-indicator","health-level-indicator-".concat(C(a.character.health))),s.style.width="".concat(a.character.health,"%"),l.appendChild(s),c.appendChild(l),i.appendChild(c)}}catch(e){o.e(e)}finally{o.f()}}},{key:"addCellEnterListener",value:function(e){this.cellEnterListeners.push(e)}},{key:"addCellLeaveListener",value:function(e){this.cellLeaveListeners.push(e)}},{key:"addCellClickListener",value:function(e){this.cellClickListeners.push(e)}},{key:"addNewGameListener",value:function(e){this.newGameListeners.push(e)}},{key:"addSaveGameListener",value:function(e){this.saveGameListeners.push(e)}},{key:"addLoadGameListener",value:function(e){this.loadGameListeners.push(e)}},{key:"onCellEnter",value:function(e){e.preventDefault();var t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach(function(e){return e.call(null,t)})}},{key:"onCellLeave",value:function(e){e.preventDefault();var t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach(function(e){return e.call(null,t)})}},{key:"onCellClick",value:function(e){var t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach(function(e){return e.call(null,t)})}},{key:"onNewGameClick",value:function(e){e.preventDefault(),this.newGameListeners.forEach(function(e){return e.call(null)})}},{key:"onSaveGameClick",value:function(e){e.preventDefault(),this.saveGameListeners.forEach(function(e){return e.call(null)})}},{key:"onLoadGameClick",value:function(e){e.preventDefault(),this.loadGameListeners.forEach(function(e){return e.call(null)})}},{key:"selectCell",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.cells&&this.cells[e]?this.cells[e].classList.remove("selected","selected-yellow","selected-green","selected-red"):console.warn("Cannot deselect cell at index ".concat(e,": cell does not exist")),this.deselectCell(e),this.cells[e].classList.add("selected","selected-".concat(t))}},{key:"deselectCell",value:function(e){var t,r=this.cells[e];(t=r.classList).remove.apply(t,function(e){return function(e){if(Array.isArray(e))return L(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||O(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(Array.from(r.classList).filter(function(e){return e.startsWith("selected")})))}},{key:"showCellTooltip",value:function(e,t){this.cells[t].title=e}},{key:"hideCellTooltip",value:function(e){this.cells[e].title=""}},{key:"showDamage",value:function(e,t){var r=this;return new Promise(function(n){var o=r.cells[e],a=document.createElement("span");a.textContent=t,a.classList.add("damage"),o.appendChild(a),a.addEventListener("animationend",function(){o.removeChild(a),n()})})}},{key:"setCursor",value:function(e){this.boardEl.style.cursor=e}},{key:"checkBinding",value:function(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}},{key:"redrawStats",value:function(e){var t=document.querySelector(".game-stats");t||((t=document.createElement("div")).className="game-stats",this.container.appendChild(t)),t.innerHTML="\n      <div>Уровень: ".concat(e.level,"</div>\n      <div>Очки: ").concat(e.score,"</div>\n      <div>Жизни: ").concat(e.health,"</div>\n      \x3c!-- добавьте другие параметры статистики --\x3e\n    ")}},{key:"showError",value:function(e){var t=document.querySelector(".game-error");t||((t=document.createElement("div")).className="game-error",t.style.cssText="\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: #ff4444;\n        color: white;\n        padding: 10px 15px;\n        border-radius: 5px;\n        z-index: 1000;\n      ",document.body.appendChild(t)),t.textContent=e,t.style.display="block",setTimeout(function(){t.style.display="none"},3e3)}},{key:"showMessage",value:function(e){var t=document.querySelector(".game-message");t||((t=document.createElement("div")).className="game-message",t.style.cssText="\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: rgba(0, 0, 0, 0.8);\n        color: white;\n        padding: 20px 30px;\n        border-radius: 10px;\n        font-size: 18px;\n        z-index: 1000;\n        text-align: center;\n      ",document.body.appendChild(t)),t.textContent=e,t.style.display="block",setTimeout(function(){t.style.display="none"},2e3)}}],r=[{key:"showError",value:function(e){alert(e)}},{key:"showMessage",value:function(e){alert(e)}}],t&&j(e.prototype,t),r&&j(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,r}();function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function R(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_(n.key),n)}}function _(e){var t=function(e){if("object"!=G(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=G(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==G(t)?t:t+""}var U=function(){return e=function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"generic";!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.level=t,this.attack=0,this.defence=0,this.health=50,this.type=r;for(var n=1;n<t;n++)this.levelUp();if("Character"===(this instanceof e?this.constructor:void 0).name)throw new Error("Cannot create instance of abstract Character class")},(t=[{key:"levelUp",value:function(){this.level+=1;var e=this.health/100*100;this.health=Math.min(this.level+80,100);var t=(80+e)/100;this.attack=Math.max(this.attack,Math.round(this.attack*t)),this.defence=Math.max(this.defence,Math.round(this.defence*t))}}])&&R(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function z(e){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(e)}function M(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(M=function(){return!!e})()}function $(e){return $=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$(e)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}var N=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,r){return t=$(t),function(e,t){if(t&&("object"==z(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,M()?Reflect.construct(t,r||[],$(e).constructor):t.apply(e,r))}(this,t,[e,"bowman"])).attack=25,r.defence=25,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(t,e),r=t,Object.defineProperty(r,"prototype",{writable:!1}),r;var r}(U);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function H(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(H=function(){return!!e})()}function W(e){return W=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},W(e)}function F(e,t){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},F(e,t)}var Y=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,r){return t=W(t),function(e,t){if(t&&("object"==q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,H()?Reflect.construct(t,r||[],W(e).constructor):t.apply(e,r))}(this,t,[e,"swordsman"])).attack=40,r.defence=10,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(t,e),r=t,Object.defineProperty(r,"prototype",{writable:!1}),r;var r}(U);function X(e){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},X(e)}function V(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(V=function(){return!!e})()}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}function Q(e,t){return Q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Q(e,t)}var Z=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,r){return t=J(t),function(e,t){if(t&&("object"==X(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,V()?Reflect.construct(t,r||[],J(e).constructor):t.apply(e,r))}(this,t,[e,"magician"])).attack=10,r.defence=40,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Q(e,t)}(t,e),r=t,Object.defineProperty(r,"prototype",{writable:!1}),r;var r}(U);function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function ee(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(ee=function(){return!!e})()}function te(e){return te=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},te(e)}function re(e,t){return re=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},re(e,t)}var ne=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,r){return t=te(t),function(e,t){if(t&&("object"==K(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ee()?Reflect.construct(t,r||[],te(e).constructor):t.apply(e,r))}(this,t,[e,"vampire"])).attack=25,r.defence=25,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&re(e,t)}(t,e),r=t,Object.defineProperty(r,"prototype",{writable:!1}),r;var r}(U);function oe(e){return oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},oe(e)}function ae(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(ae=function(){return!!e})()}function ie(e){return ie=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ie(e)}function ce(e,t){return ce=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ce(e,t)}var le=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,r){return t=ie(t),function(e,t){if(t&&("object"==oe(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ae()?Reflect.construct(t,r||[],ie(e).constructor):t.apply(e,r))}(this,t,[e,"undead"])).attack=40,r.defence=10,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ce(e,t)}(t,e),r=t,Object.defineProperty(r,"prototype",{writable:!1}),r;var r}(U);function se(e){return se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},se(e)}function ue(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(ue=function(){return!!e})()}function fe(e){return fe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},fe(e)}function pe(e,t){return pe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},pe(e,t)}var he=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=function(e,t,r){return t=fe(t),function(e,t){if(t&&("object"==se(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,ue()?Reflect.construct(t,r||[],fe(e).constructor):t.apply(e,r))}(this,t,[e,"daemon"])).attack=10,r.defence=10,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&pe(e,t)}(t,e),r=t,Object.defineProperty(r,"prototype",{writable:!1}),r;var r}(U);function me(e){return me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},me(e)}function de(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,ye(n.key),n)}}function ye(e){var t=function(e){if("object"!=me(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=me(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==me(t)?t:t+""}var be=function(){return e=function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._characters=new Set(t)},t=[{key:"characters",get:function(){return Array.from(this._characters)}},{key:"add",value:function(e){return this._characters.add(e),this}},{key:"addAll",value:function(){for(var e=this,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return r.forEach(function(t){return e._characters.add(t)}),this}},{key:"remove",value:function(e){return this._characters.delete(e),this}},{key:"size",get:function(){return this._characters.size}},{key:"has",value:function(e){return this._characters.has(e)}},{key:Symbol.iterator,value:function(){return this._characters.values()}}],t&&de(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function ge(){var e,t,r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",o=r.toStringTag||"@@toStringTag";function a(r,n,o,a){var l=n&&n.prototype instanceof c?n:c,s=Object.create(l.prototype);return ve(s,"_invoke",function(r,n,o){var a,c,l,s=0,u=o||[],f=!1,p={p:0,n:0,v:e,a:h,f:h.bind(e,4),d:function(t,r){return a=t,c=0,l=e,p.n=r,i}};function h(r,n){for(c=r,l=n,t=0;!f&&s&&!o&&t<u.length;t++){var o,a=u[t],h=p.p,m=a[2];r>3?(o=m===n)&&(l=a[(c=a[4])?5:(c=3,3)],a[4]=a[5]=e):a[0]<=h&&((o=r<2&&h<a[1])?(c=0,p.v=n,p.n=a[1]):h<m&&(o=r<3||a[0]>n||n>m)&&(a[4]=r,a[5]=n,p.n=m,c=0))}if(o||r>1)return i;throw f=!0,n}return function(o,u,m){if(s>1)throw TypeError("Generator is already running");for(f&&1===u&&h(u,m),c=u,l=m;(t=c<2?e:l)||!f;){a||(c?c<3?(c>1&&(p.n=-1),h(c,l)):p.n=l:p.v=l);try{if(s=2,a){if(c||(o="next"),t=a[o]){if(!(t=t.call(a,l)))throw TypeError("iterator result is not an object");if(!t.done)return t;l=t.value,c<2&&(c=0)}else 1===c&&(t=a.return)&&t.call(a),c<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),c=1);a=e}else if((t=(f=p.n<0)?l:r.call(n,p))!==i)break}catch(t){a=e,c=1,l=t}finally{s=1}}return{value:t,done:f}}}(r,o,a),!0),s}var i={};function c(){}function l(){}function s(){}t=Object.getPrototypeOf;var u=[][n]?t(t([][n]())):(ve(t={},n,function(){return this}),t),f=s.prototype=c.prototype=Object.create(u);function p(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,ve(e,o,"GeneratorFunction")),e.prototype=Object.create(f),e}return l.prototype=s,ve(f,"constructor",s),ve(s,"constructor",l),l.displayName="GeneratorFunction",ve(s,o,"GeneratorFunction"),ve(f),ve(f,o,"Generator"),ve(f,n,function(){return this}),ve(f,"toString",function(){return"[object Generator]"}),(ge=function(){return{w:a,m:p}})()}function ve(e,t,r,n){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}ve=function(e,t,r,n){function a(t,r){ve(e,t,function(e){return this._invoke(t,r,e)})}t?o?o(e,t,{value:r,enumerable:!n,configurable:!n,writable:!n}):e[t]=r:(a("next",0),a("throw",1),a("return",2))},ve(e,t,r,n)}var Ae=ge().m(Ce);function Ce(e,t){var r,n;return ge().w(function(o){for(;;)switch(o.n){case 0:return r=e[Math.floor(Math.random()*e.length)],n=Math.floor(Math.random()*t)+1,o.n=1,new r(n);case 1:o.n=0;break;case 2:return o.a(2)}},Ae)}function Ee(e,t,r){for(var n=Ce(e,t),o=[],a=0;a<r;a++)o.push(n.next().value);return new be(o)}function we(e){return we="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},we(e)}function ke(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Pe(n.key),n)}}function Se(e,t,r){return t&&ke(e.prototype,t),r&&ke(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function Pe(e){var t=function(e){if("object"!=we(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=we(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==we(t)?t:t+""}var xe=Se(function e(t,r){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!(t instanceof U))throw new Error("character must be instance of Character or its children");if("number"!=typeof r)throw new Error("position must be a number");this.character=t,this.position=r});function Be(e){return Be="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Be(e)}function Oe(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Le(n.key),n)}}function Le(e){var t=function(e){if("object"!=Be(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=Be(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Be(t)?t:t+""}var je=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.currentTurn="player",this.selectedCharacter=null,this.selectedCellIndex=null,this.turnNumber=1,this.scores=0,this.maxScores=0,this.gameOver=!1,this.gameCompleted=!1,this.currentLevel=1,this.playerPositions=[],this.enemyPositions=[]}return t=e,n=[{key:"from",value:function(t){if(!t||"object"!==Be(t))return new e;var r=new e;return r.currentTurn=t.currentTurn||"player",r.selectedCharacter=t.selectedCharacter||null,r.selectedCellIndex=t.selectedCellIndex||null,r.turnNumber=t.turnNumber||1,r.scores=t.scores||0,r.maxScores=t.maxScores||0,r.gameOver=t.gameOver||!1,r.gameCompleted=t.gameCompleted||!1,r.currentLevel=t.currentLevel||1,r.playerPositions=this.restorePositions(t.playerPositions||[]),r.enemyPositions=this.restorePositions(t.enemyPositions||[]),r}},{key:"restorePositions",value:function(e){return e.map(function(e){return{character:{level:e.character.level,attack:e.character.attack,defence:e.character.defence,health:e.character.health,type:e.character.type},position:e.position}})}}],(r=[{key:"switchTurn",value:function(){this.currentTurn="player"===this.currentTurn?"computer":"player","player"===this.currentTurn&&(this.turnNumber+=1),this.deselectCharacter()}},{key:"selectCharacter",value:function(e,t){this.selectedCharacter=e,this.selectedCellIndex=t}},{key:"deselectCharacter",value:function(){this.selectedCharacter=null,this.selectedCellIndex=null}},{key:"isPlayerTurn",value:function(){return"player"===this.currentTurn}},{key:"hasSelectedCharacter",value:function(){return null!==this.selectedCharacter}},{key:"addScores",value:function(e){this.scores+=e,this.scores>this.maxScores&&(this.maxScores=this.scores)}},{key:"setGameOver",value:function(){this.gameOver=!0,this.updateMaxScores()}},{key:"setGameCompleted",value:function(){this.gameCompleted=!0,this.updateMaxScores()}},{key:"updateMaxScores",value:function(){this.scores>this.maxScores&&(this.maxScores=this.scores)}},{key:"reset",value:function(){this.currentTurn="player",this.turnNumber=1,this.scores=0,this.gameOver=!1,this.gameCompleted=!1,this.deselectCharacter()}},{key:"isGameActive",value:function(){return!this.gameOver&&!this.gameCompleted}},{key:"toObject",value:function(){return{currentTurn:this.currentTurn,selectedCharacter:this.selectedCharacter?this.serializeCharacter(this.selectedCharacter):null,selectedCellIndex:this.selectedCellIndex,turnNumber:this.turnNumber,scores:this.scores,maxScores:this.maxScores,gameOver:this.gameOver,gameCompleted:this.gameCompleted,currentLevel:this.currentLevel,playerPositions:this.serializePositions(this.playerPositions),enemyPositions:this.serializePositions(this.enemyPositions)}}},{key:"serializePositions",value:function(e){var t=this;return e.map(function(e){return{character:t.serializeCharacter(e.character),position:e.position}})}},{key:"serializeCharacter",value:function(e){return{level:e.level,attack:e.attack,defence:e.defence,health:e.health,type:e.type}}}])&&Oe(t.prototype,r),n&&Oe(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,r,n}();const Te="auto",De="pointer",Ge="crosshair",Re="not-allowed";function _e(e){return _e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_e(e)}function Ue(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=qe(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return i=e.done,e},e:function(e){c=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(c)throw a}}}}function ze(){var e,t,r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",o=r.toStringTag||"@@toStringTag";function a(r,n,o,a){var l=n&&n.prototype instanceof c?n:c,s=Object.create(l.prototype);return Me(s,"_invoke",function(r,n,o){var a,c,l,s=0,u=o||[],f=!1,p={p:0,n:0,v:e,a:h,f:h.bind(e,4),d:function(t,r){return a=t,c=0,l=e,p.n=r,i}};function h(r,n){for(c=r,l=n,t=0;!f&&s&&!o&&t<u.length;t++){var o,a=u[t],h=p.p,m=a[2];r>3?(o=m===n)&&(l=a[(c=a[4])?5:(c=3,3)],a[4]=a[5]=e):a[0]<=h&&((o=r<2&&h<a[1])?(c=0,p.v=n,p.n=a[1]):h<m&&(o=r<3||a[0]>n||n>m)&&(a[4]=r,a[5]=n,p.n=m,c=0))}if(o||r>1)return i;throw f=!0,n}return function(o,u,m){if(s>1)throw TypeError("Generator is already running");for(f&&1===u&&h(u,m),c=u,l=m;(t=c<2?e:l)||!f;){a||(c?c<3?(c>1&&(p.n=-1),h(c,l)):p.n=l:p.v=l);try{if(s=2,a){if(c||(o="next"),t=a[o]){if(!(t=t.call(a,l)))throw TypeError("iterator result is not an object");if(!t.done)return t;l=t.value,c<2&&(c=0)}else 1===c&&(t=a.return)&&t.call(a),c<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),c=1);a=e}else if((t=(f=p.n<0)?l:r.call(n,p))!==i)break}catch(t){a=e,c=1,l=t}finally{s=1}}return{value:t,done:f}}}(r,o,a),!0),s}var i={};function c(){}function l(){}function s(){}t=Object.getPrototypeOf;var u=[][n]?t(t([][n]())):(Me(t={},n,function(){return this}),t),f=s.prototype=c.prototype=Object.create(u);function p(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,Me(e,o,"GeneratorFunction")),e.prototype=Object.create(f),e}return l.prototype=s,Me(f,"constructor",s),Me(s,"constructor",l),l.displayName="GeneratorFunction",Me(s,o,"GeneratorFunction"),Me(f),Me(f,o,"Generator"),Me(f,n,function(){return this}),Me(f,"toString",function(){return"[object Generator]"}),(ze=function(){return{w:a,m:p}})()}function Me(e,t,r,n){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}Me=function(e,t,r,n){function a(t,r){Me(e,t,function(e){return this._invoke(t,r,e)})}t?o?o(e,t,{value:r,enumerable:!n,configurable:!n,writable:!n}):e[t]=r:(a("next",0),a("throw",1),a("return",2))},Me(e,t,r,n)}function $e(e,t,r,n,o,a,i){try{var c=e[a](i),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,o)}function Ie(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var a=e.apply(t,r);function i(e){$e(a,n,o,i,c,"next",e)}function c(e){$e(a,n,o,i,c,"throw",e)}i(void 0)})}}function Ne(e){return function(e){if(Array.isArray(e))return He(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||qe(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function qe(e,t){if(e){if("string"==typeof e)return He(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?He(e,t):void 0}}function He(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function We(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Fe(n.key),n)}}function Fe(e){var t=function(e){if("object"!=_e(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=_e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_e(t)?t:t+""}var Ye=function(){return e=function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.gamePlay=t,this.stateService=r,this.gameState=new je,this.playerTeam=null,this.enemyTeam=null,this.playerPositions=[],this.enemyPositions=[],this.boardSize=8,this.movementCells=[],this.attackCells=[],this.currentLevel=1,this.themes=["prairie","desert","arctic","mountain"],this.maxLevel=4,this.bindUnloadHandler()},t=[{key:"init",value:function(){this.loadGame(),this.gameState.playerPositions&&0!==this.gameState.playerPositions.length?this.restoreGameFromState():this.startNewGame(),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addNewGameListener(this.onNewGame.bind(this))}},{key:"loadGame",value:function(){try{var e=this.stateService.load();if(e)return this.gameState=je.from(e),console.log("Game loaded successfully"),!0}catch(e){console.error("Error loading game:",e),this.gamePlay.showError("Не удалось загрузить сохраненную игру")}return!1}},{key:"saveGame",value:function(){try{var e=this.gameState.toObject();this.stateService.save(e),console.log("Game saved successfully")}catch(e){console.error("Error saving game:",e),this.gamePlay.showError("Не удалось сохранить игру")}}},{key:"restoreGameFromState",value:function(){this.currentLevel=this.gameState.currentLevel,this.playerPositions=this.restorePositionedCharacters(this.gameState.playerPositions),this.enemyPositions=this.restorePositionedCharacters(this.gameState.enemyPositions),this.playerTeam={characters:this.playerPositions.map(function(e){return e.character})},this.enemyTeam={characters:this.enemyPositions.map(function(e){return e.character})};var e=Math.min(this.currentLevel-1,this.themes.length-1),t=this.themes[e];this.gamePlay.drawUi(t),this.updateStatistics(),this.redrawBoard(),console.log("Game restored from state")}},{key:"restorePositionedCharacters",value:function(e){var t=this;return e.map(function(e){var r=t.createCharacterFromData(e.character);return new xe(r,e.position)})}},{key:"createCharacterFromData",value:function(e){var t={bowman:N,swordsman:Y,magician:Z,vampire:ne,undead:le,daemon:he}[e.type];if(!t)throw new Error("Unknown character type: ".concat(e.type));var r=new t(e.level);return r.attack=e.attack,r.defence=e.defence,r.health=e.health,r}},{key:"bindUnloadHandler",value:function(){var e=this;window.addEventListener("beforeunload",function(){e.saveGame()})}},{key:"startNewGame",value:function(){this.currentLevel=1,this.resetGameState(),this.startNewLevel(),console.log("New game started")}},{key:"startNewLevel",value:function(){var e=Math.min(this.currentLevel-1,this.themes.length-1),t=this.themes[e];this.gamePlay.drawUi(t),this.updateStatistics(),this.playerTeam&&0!==this.playerTeam.characters.length||this.generateTeams(),this.redrawBoard(),this.saveGame(),console.log("Starting level ".concat(this.currentLevel," with theme: ").concat(t))}},{key:"updateStatistics",value:function(){this.gamePlay.redrawStats({level:this.currentLevel,score:this.gameState.scores,maxScore:this.gameState.maxScores})}},{key:"generateTeams",value:function(){var e=[N,Y,Z],t=[ne,le,he];this.playerTeam=Ee(e,this.currentLevel,2),this.enemyTeam=Ee(t,this.currentLevel,2),this.placeCharacters(this.playerTeam.characters,0,2,this.playerPositions),this.placeCharacters(this.enemyTeam.characters,6,2,this.enemyPositions)}},{key:"placeCharacters",value:function(e,t,r,n){var o=this,a=new Set;e.forEach(function(e){var i,c=0;do{var l=t+Math.floor(Math.random()*r),s=Math.floor(Math.random()*o.boardSize);if(i=l*o.boardSize+s,++c>50){for(var u=t;u<t+r;u++)for(var f=0;f<o.boardSize;f++){var p=u*o.boardSize+f;if(!a.has(p)&&!o.isPositionOccupied(p)){i=p;break}}break}}while(o.isPositionOccupied(i)||a.has(i));a.add(i),n.push(new xe(e,i))})}},{key:"isPositionOccupied",value:function(e){return[].concat(Ne(this.playerPositions),Ne(this.enemyPositions)).some(function(t){return t.position===e})}},{key:"redrawBoard",value:function(){var e=[].concat(Ne(this.playerPositions),Ne(this.enemyPositions));this.gamePlay.redrawPositions(e)}},{key:"onCellClick",value:function(e){if(this.gameState.isGameActive())if(this.updateGameState(),this.saveGame(),console.log("Cell clicked:",e),console.log("Current turn:",this.gameState.currentTurn),this.gameState.isPlayerTurn()){var t=this.findCharacterAtPosition(e);if(t){var r=t.character;this.isPlayerCharacter(r)?this.selectCharacter(r,e):this.gameState.hasSelectedCharacter()?this.attackCells.includes(e)?this.attackCharacter(e,t):this.gamePlay.showError("Невозможно атаковать этого противника!"):this.gamePlay.showError("Вы можете выбирать только своих персонажей!")}else this.gameState.hasSelectedCharacter()?this.movementCells.includes(e)?this.moveCharacter(e):this.gamePlay.showError("Невозможно переместиться в эту клетку!"):this.gamePlay.showError("Выберите своего персонажа!")}else this.gamePlay.showError("Сейчас ход противника!")}},{key:"onCellEnter",value:function(e){if(this.gameState.isGameActive()){var t=this.findCharacterAtPosition(e);if(t){var r=function(e){if(!e||"object"!==v(e))return"";var t=e.level,r=e.attack,n=e.defence,o=e.health;return"🎖".concat(t," ⚔").concat(r," 🛡").concat(n," ❤").concat(o)}(t.character);this.gamePlay.showCellTooltip(r,e)}this.updateCursor(e)}else this.gamePlay.setCursor(Te)}},{key:"onCellLeave",value:function(e){this.gamePlay.hideCellTooltip(e),this.gamePlay.setCursor(Te)}},{key:"onNewGame",value:function(){console.log("New Game button clicked");try{this.stateService.clear()}catch(e){console.error("Error clearing saved game:",e)}this.startNewGame()}},{key:"selectCharacter",value:function(e,t){null!==this.gameState.selectedCellIndex&&(this.gamePlay.deselectCell(this.gameState.selectedCellIndex),this.resetCellHighlights()),this.gamePlay.selectCell(t),this.gameState.selectCharacter(e,t),this.calculateAvailableCells(e,t),console.log("Player character selected:",{type:e.type,level:e.level,position:t})}},{key:"moveCharacter",value:function(e){var t=this.gameState.selectedCharacter,r=this.gameState.selectedCellIndex;if(t&&null!==r){var n=this.playerPositions.findIndex(function(e){return e.character===t&&e.position===r});-1!==n?(this.playerPositions[n].position=e,this.gamePlay.deselectCell(r),this.resetCellHighlights(),this.gameState.deselectCharacter(),this.redrawBoard(),this.endPlayerTurn(),console.log("Character moved from ".concat(r," to ").concat(e))):this.gamePlay.showError("Ошибка: персонаж не найден!")}else this.gamePlay.showError("Персонаж не выбран!")}},{key:"attackCharacter",value:(u=Ie(ze().m(function e(t,r){var n,o,a,i;return ze().w(function(e){for(;;)switch(e.p=e.n){case 0:if(n=this.gameState.selectedCharacter,o=r.character,n){e.n=1;break}return this.gamePlay.showError("Атакующий персонаж не выбран!"),e.a(2);case 1:return a=this.calculateDamage(n,o),console.log("Attack: ".concat(n.type," (attack:").concat(n.attack,") -> ").concat(o.type," (defence:").concat(o.defence,"), damage: ").concat(a)),this.gameState.addScores(Math.round(a)),this.updateStatistics(),o.health-=a,o.health<0&&(o.health=0),e.p=2,e.n=3,this.gamePlay.showDamage(t,a);case 3:e.n=5;break;case 4:e.p=4,i=e.v,console.error("Error showing damage animation:",i);case 5:if(!(o.health<=0)){e.n=7;break}return this.gameState.addScores(10),this.updateStatistics(),this.removeCharacter(o),console.log("Character ".concat(o.type," died!")),e.n=6,this.checkRoundEnd();case 6:e.n=8;break;case 7:this.redrawBoard();case 8:this.gamePlay.deselectCell(this.gameState.selectedCellIndex),this.resetCellHighlights(),this.gameState.deselectCharacter(),this.updateGameState(),this.saveGame(),this.gameState.isGameActive()&&this.enemyPositions.length>0&&this.playerPositions.length>0&&this.endPlayerTurn();case 9:return e.a(2)}},e,this,[[2,4]])})),function(e,t){return u.apply(this,arguments)})},{key:"calculateDamage",value:function(e,t){var r=e.attack-t.defence,n=.1*e.attack;return Math.max(r,n)}},{key:"removeCharacter",value:function(e){this.playerPositions=this.playerPositions.filter(function(t){return t.character!==e}),this.enemyPositions=this.enemyPositions.filter(function(t){return t.character!==e}),this.playerTeam&&(this.playerTeam.characters=this.playerTeam.characters.filter(function(t){return t!==e})),this.enemyTeam&&(this.enemyTeam.characters=this.enemyTeam.characters.filter(function(t){return t!==e}))}},{key:"checkRoundEnd",value:(s=Ie(ze().m(function e(){return ze().w(function(e){for(;;)switch(e.n){case 0:if(this.redrawBoard(),0!==this.enemyPositions.length){e.n=2;break}return e.n=1,this.handlePlayerVictory();case 1:e.n=3;break;case 2:if(0!==this.playerPositions.length){e.n=3;break}return e.n=3,this.handlePlayerDefeat();case 3:return e.a(2)}},e,this)})),function(){return s.apply(this,arguments)})},{key:"handlePlayerVictory",value:(l=Ie(ze().m(function e(){return ze().w(function(e){for(;;)switch(e.n){case 0:return console.log("Player victory! Leveling up characters..."),this.gameState.addScores(50*this.currentLevel),this.updateStatistics(),e.n=1,this.delay(1500);case 1:if(this.levelUpSurvivingCharacters(),!(this.currentLevel>=this.maxLevel)){e.n=3;break}return e.n=2,this.handleGameCompleted();case 2:e.n=4;break;case 3:this.currentLevel+=1,this.resetGameState(),this.startNewLevel(),this.gamePlay.showMessage("Победа! Переход на уровень ".concat(this.currentLevel));case 4:return e.a(2)}},e,this)})),function(){return l.apply(this,arguments)})},{key:"handlePlayerDefeat",value:(c=Ie(ze().m(function e(){return ze().w(function(e){for(;;)switch(e.n){case 0:return console.log("Player defeated! Game over."),e.n=1,this.delay(1500);case 1:this.gameState.setGameOver(),this.updateStatistics(),this.gamePlay.showMessage('Игра окончена! Нажмите "New Game" для новой игры.');case 2:return e.a(2)}},e,this)})),function(){return c.apply(this,arguments)})},{key:"handleGameCompleted",value:(i=Ie(ze().m(function e(){return ze().w(function(e){for(;;)switch(e.n){case 0:return console.log("Game completed! All levels finished."),this.gameState.addScores(1e3),this.gameState.setGameCompleted(),this.updateStatistics(),e.n=1,this.delay(1500);case 1:this.gamePlay.showMessage("Поздравляем! Вы прошли все уровни игры!");case 2:return e.a(2)}},e,this)})),function(){return i.apply(this,arguments)})},{key:"levelUpSurvivingCharacters",value:function(){this.playerPositions.forEach(function(e){var t=e.character;console.log("Leveling up ".concat(t.type," from level ").concat(t.level," with ").concat(t.health," health")),t.levelUp(),console.log("After level up: level ".concat(t.level,", health ").concat(t.health,", attack ").concat(t.attack,", defence ").concat(t.defence))})}},{key:"calculateAvailableCells",value:function(e,t){var r=this,n=S(e.type),o=P(e.type);this.movementCells=E(t,n,this.boardSize).filter(function(e){return!r.isPositionOccupied(e)}),this.attackCells=w(t,o,this.boardSize).filter(function(e){var t=r.findCharacterAtPosition(e);return t&&r.isEnemyCharacter(t.character)}),this.highlightAvailableCells()}},{key:"highlightAvailableCells",value:function(){var e=this;this.movementCells.forEach(function(t){e.gamePlay.selectCell(t,"green")}),this.attackCells.forEach(function(t){e.gamePlay.selectCell(t,"red")})}},{key:"resetCellHighlights",value:function(){var e=this;this.movementCells.forEach(function(t){e.gamePlay.deselectCell(t)}),this.attackCells.forEach(function(t){e.gamePlay.deselectCell(t)}),this.movementCells=[],this.attackCells=[]}},{key:"updateCursor",value:function(e){var t=this.findCharacterAtPosition(e);this.gameState.hasSelectedCharacter()?t?this.isPlayerCharacter(t.character)?this.gamePlay.setCursor(De):this.attackCells.includes(e)?this.gamePlay.setCursor(Ge):this.gamePlay.setCursor(Re):this.movementCells.includes(e)?this.gamePlay.setCursor(De):this.gamePlay.setCursor(Re):t&&this.isPlayerCharacter(t.character)?this.gamePlay.setCursor(De):this.gamePlay.setCursor(Te)}},{key:"computerTurn",value:(a=Ie(ze().m(function e(){var t,r,n,o,a,i,c;return ze().w(function(e){for(;;)switch(e.n){case 0:return console.log("Computer thinking..."),e.n=1,this.delay(1e3);case 1:if(0!==(t=this.enemyPositions.filter(function(e){return e.character.health>0})).length){e.n=2;break}return console.log("No alive enemies, skipping computer turn"),this.endComputerTurn(),e.a(2);case 2:r=null,n=-1/0,o=Ue(t);try{for(o.s();!(a=o.n()).done;)i=a.value,(c=this.findBestAction(i))&&c.score>n&&(n=c.score,r=c)}catch(e){o.e(e)}finally{o.f()}if(!r){e.n=4;break}return e.n=3,this.executeComputerAction(r);case 3:e.n=5;break;case 4:console.log("No available actions for computer");case 5:this.endComputerTurn();case 6:return e.a(2)}},e,this)})),function(){return a.apply(this,arguments)})},{key:"findBestAction",value:function(e){var t=this,r=e.character,n=e.position,o=S(r.type),a=P(r.type),i=E(n,o,this.boardSize).filter(function(e){return!t.isPositionOccupied(e)}),c=w(n,a,this.boardSize).filter(function(e){var r=t.findCharacterAtPosition(e);return r&&t.isPlayerCharacter(r.character)}),l=null,s=-1/0;if(c.length>0){var u=this.findBestAttackTarget(c,r);u&&u.score>s&&(s=u.score,l=u)}var f,p=Ue(i);try{for(p.s();!(f=p.n()).done;){var h=f.value,m=w(h,a,this.boardSize).filter(function(e){var r=t.findCharacterAtPosition(e);return r&&t.isPlayerCharacter(r.character)});if(m.length>0){var d=this.findBestAttackTarget(m,r);if(d){var y=.9*d.score;y>s&&(s=y,l={type:"move-and-attack",enemy:e,moveTo:h,attackTarget:d.target,targetPosition:d.targetPosition,score:y})}}}}catch(e){p.e(e)}finally{p.f()}return l}},{key:"findBestAttackTarget",value:function(e,t){var r,n=null,o=-1/0,a=Ue(e);try{for(a.s();!(r=a.n()).done;){var i=r.value,c=this.findCharacterAtPosition(i);if(c&&this.isPlayerCharacter(c.character)){var l=this.calculateAttackScore(t,c.character);l>o&&(o=l,n={target:c.character,targetPosition:i,score:l})}}}catch(e){a.e(e)}finally{a.f()}return n}},{key:"calculateAttackScore",value:function(e,t){var r=this.calculateDamage(e,t);return r+(t.health<=r?10:0)-.1*t.defence+.05*t.attack}},{key:"executeComputerAction",value:(o=Ie(ze().m(function e(t){var r;return ze().w(function(e){for(;;)switch(e.n){case 0:console.log("Computer action:",t.type),r=t.type,e.n="attack"===r?1:"move-and-attack"===r?3:5;break;case 1:return e.n=2,this.executeComputerAttack(t.enemy,t.targetPosition);case 2:return e.a(3,6);case 3:return e.n=4,this.executeComputerMoveAndAttack(t.enemy,t.moveTo,t.targetPosition);case 4:return e.a(3,6);case 5:console.log("Unknown computer action type:",t.type);case 6:return e.a(2)}},e,this)})),function(e){return o.apply(this,arguments)})},{key:"executeComputerAttack",value:(n=Ie(ze().m(function e(t,r){var n,o,a;return ze().w(function(e){for(;;)switch(e.p=e.n){case 0:if(n=this.findCharacterAtPosition(r)){e.n=1;break}return console.error("Target not found at position:",r),e.a(2);case 1:return o=this.calculateDamage(t.character,n.character),console.log("Computer attack: ".concat(t.character.type," -> ").concat(n.character.type,", damage: ").concat(o)),n.character.health-=o,n.character.health<0&&(n.character.health=0),e.p=2,e.n=3,this.gamePlay.showDamage(r,o);case 3:e.n=5;break;case 4:e.p=4,a=e.v,console.error("Error showing damage animation:",a);case 5:n.character.health<=0&&(this.removeCharacter(n.character),console.log("Player character ".concat(n.character.type," died!"))),this.redrawBoard();case 6:return e.a(2)}},e,this,[[2,4]])})),function(e,t){return n.apply(this,arguments)})},{key:"executeComputerMoveAndAttack",value:(r=Ie(ze().m(function e(t,r,n){var o,a;return ze().w(function(e){for(;;)switch(e.n){case 0:if(-1===(o=this.enemyPositions.findIndex(function(e){return e===t}))){e.n=1;break}return a=t.position,this.enemyPositions[o].position=r,console.log("Computer moved ".concat(t.character.type," from ").concat(a," to ").concat(r)),this.redrawBoard(),e.n=1,this.delay(500);case 1:return e.n=2,this.executeComputerAttack(t,n);case 2:return e.a(2)}},e,this)})),function(e,t,n){return r.apply(this,arguments)})},{key:"endComputerTurn",value:function(){this.gameState.switchTurn(),console.log("Computer turn finished. Current turn:",this.gameState.currentTurn)}},{key:"endPlayerTurn",value:function(){this.gameState.switchTurn(),console.log("Player turn finished. Current turn:",this.gameState.currentTurn),this.updateGameState(),this.saveGame(),this.computerTurn()}},{key:"updateGameState",value:function(){var e=this;this.gameState.currentLevel=this.currentLevel,this.gameState.playerPositions=this.playerPositions.map(function(t){return{character:e.gameState.serializeCharacter(t.character),position:t.position}}),this.gameState.enemyPositions=this.enemyPositions.map(function(t){return{character:e.gameState.serializeCharacter(t.character),position:t.position}})}},{key:"resetGameState",value:function(){var e=this.gameState.maxScores;this.gameState=new je,this.gameState.maxScores=e,this.playerTeam=null,this.enemyTeam=null,this.playerPositions=[],this.enemyPositions=[],this.movementCells=[],this.attackCells=[]}},{key:"delay",value:function(e){return new Promise(function(t){return setTimeout(t,e)})}},{key:"findCharacterAtPosition",value:function(e){return[].concat(Ne(this.playerPositions),Ne(this.enemyPositions)).find(function(t){return t.position===e})||null}},{key:"isPlayerCharacter",value:function(e){return["bowman","swordsman","magician"].includes(e.type)}},{key:"isEnemyCharacter",value:function(e){return["vampire","undead","daemon"].includes(e.type)}}],t&&We(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,r,n,o,a,i,c,l,s,u}();function Xe(e){return Xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Xe(e)}function Ve(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Je(n.key),n)}}function Je(e){var t=function(e){if("object"!=Xe(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=Xe(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Xe(t)?t:t+""}var Qe=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.storage=t},(t=[{key:"save",value:function(e){this.storage.setItem("state",JSON.stringify(e))}},{key:"load",value:function(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}])&&Ve(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),Ze=new D;Ze.bindToDOM(document.querySelector("#game-container")),new Ye(Ze,new Qe(localStorage)).init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,